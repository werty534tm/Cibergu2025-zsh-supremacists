#===============================================================================
# Telegraf Configuration
#===============================================================================

#-------------------------------------------------------------------------------
# Global Agent Configuration
#-------------------------------------------------------------------------------
[agent]
  interval = "10s"             # Intervalo de recolección por defecto
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"       # Intervalo de envío a outputs
  flush_jitter = "0s"
  precision = ""               # "ns", "us", "ms", "s" - por defecto segundos
  hostname = ""                # Dejar en blanco para que Docker lo gestione o establecer uno
  omit_hostname = false

#-------------------------------------------------------------------------------
# Input Plugins
#-------------------------------------------------------------------------------
[[inputs.http_listener_v2]]
  ## Address and port to host HTTP listener on.
  service_address = ":8080" # Telegraf escuchará en este puerto DENTRO de su contenedor

  ## Paths to listen to.
  paths = ["/submit_air_quality"] # Tu cURL apuntará a http://<host_o_nginx>:PORT/submit_air_quality

  ## Data format to consume.
  data_format = "json"

  ## Pre-defined measurement name.
  name_override = "air_quality_simulated"

  ## JSON parsing options
  json_timestamp_path = "timestamp" # Campo JSON que contiene el timestamp
  json_timestamp_format = "unix"   # Formato del timestamp (segundos desde epoch)

  ## Define qué campos JSON se convierten en tags en InfluxDB
  json_tag_keys = ["sensor_id", "location"]

  ## El resto de los campos numéricos del JSON (pm25, pm10, co2, temperature, humidity, voc)
  ## se convertirán automáticamente en fields de InfluxDB. Telegraf inferirá sus tipos.
  ## Si necesitas forzar tipos de datos, puedes usar la sintaxis json_v2 (ver ejemplos anteriores).

#-------------------------------------------------------------------------------
# Output Plugins
#-------------------------------------------------------------------------------
[[outputs.influxdb_v2]]
  ## The URLs of the InfluxDB_v2 server endpoints.
  urls = ["http://influxdb_service:8086"] # Nombre del servicio InfluxDB en Docker Compose

  ## Token for authentication. Usa la variable de entorno.
  token = "${INFLUX_TOKEN}"

  ## Organization is the name of the organization to write data to.
  organization = "${INFLUX_ORG}"

  ## Destination bucket to write into.
  bucket = "${INFLUX_BUCKET}"